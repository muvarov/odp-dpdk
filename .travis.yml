# Copyright (c) 2016-2018, Linaro Limited
# All rights reserved.
# SPDX-License-Identifier:     BSD-3-Clause
#
# Please update xxxx for your coverity token and notification email if required
# pushing to github/master will run make check
# pushing to github/coverity_scan will also launch a static analysis
# See https://scan.coverity.com/travis_ci

#
# Travis uses Docker images which are maintained here:
# 	https://github.com/Linaro/odp-docker-images
# CI scripts are maintained under ./scripts/ci/ directory
# which passed into container during the test run.

language: c
sudo: required
dist: trusty
stages:
  - "build only"
  - test

#addons:
#        coverity_scan:
#                project:
#                        name: "$TRAVIS_REPO_SLUG"
#                        notification_email: xxxx
#                        build_command_prepend: "./bootstrap && ./configure --enable-test-cpp --enable-test-vald --enable-test-helper --enable-test-perf --enable-user-guides --enable-test-perf-proc --enable-test-example"
#                        build_command:   "make"
#                        branch_pattern: coverity_scan

cache:
        ccache: true
        pip: true

compiler:
        - gcc
        - clang

env:
    global:
        #
        # By default Linaro CODECOV_TOKEN token is used. It's ok to use it to see
        # for individual commit validation. But you you want to track tests history
        # you need generated new one at https://codecov.io specific for your repo.
        - CODECOV_TOKEN=8e1c0fd8-62ff-411e-a79f-5839f6662c11
        - UBUNTU_VERS="16.04"
        - BUILD_ONLY=0
    matrix:
        - CONF=""
        - CONF="--disable-abi-compat"
        - BUILD_ONLY=1 ARCH="arm64"
        - BUILD_ONLY=1 ARCH="armhf"
        - BUILD_ONLY=1 ARCH="i386"
        - BUILD_ONLY=1 ARCH="arm64" CONF="--disable-abi-compat"
        - BUILD_ONLY=1 ARCH="armhf" CONF="--disable-abi-compat"
        - BUILD_ONLY=1 ARCH="i386" CONF="--disable-abi-compat"
        - CONF="--enable-deprecated"
        - CONF="--disable-static-applications"
        - CONF="--disable-host-optimization"
        - CONF="--disable-host-optimization --disable-abi-compat"
        - BUILD_ONLY=1 ARCH="x86_64" CONF="--enable-pcapng-support"
        - CONF="--without-openssl"
        - CONF="" UBUNTU_VERS="18.04"

matrix:
  exclude:
  - compiler: gcc
    env: BUILD_ONLY=1 ARCH="arm64"
  - compiler: gcc
    env: BUILD_ONLY=1 ARCH="i386"

script:
        - if [ -z "${DOCKER_NAMESPACE}" ] ; then export DOCKER_NAMESPACE="opendataplane"; fi
        - if [ ${BUILD_ONLY} -eq 1 ] ; then
               docker run --privileged -i -t -v `pwd`:/odp --shm-size 8g
                 -e CC="${CC}"
                 -e CONF="${CONF}"
                 ${DOCKER_NAMESPACE}/travis-odp-lng-ubuntu_${UBUNTU_VERS} /odp/scripts/ci/build_${ARCH}.sh ;
          else
               echo "Running test" ;
               docker run --privileged -i -t
                 -v `pwd`:/odp --shm-size 8g
                 -e CC="${CC}"
                 -e CONF="${CONF}"
                 ${DOCKER_NAMESPACE}/travis-odp-lng-ubuntu_${UBUNTU_VERS} /odp/scripts/ci/check.sh ;
          fi
jobs:
        include:
                - stage: test
                  env: TEST=coverage
                  compiler: gcc
                  install:
                          - sudo sysctl vm.nr_hugepages=1000
                  script:
                          - if [ -z "${DOCKER_NAMESPACE}" ] ; then export DOCKER_NAMESPACE="opendataplane"; fi
                          - docker run --privileged -i -t
                              -v `pwd`:/odp --shm-size 8g
                              -e CODECOV_TOKEN="${CODECOV_TOKEN}"
                              -e CC="${CC}"
                              ${DOCKER_NAMESPACE}/travis-odp-lng-ubuntu_16.04 /odp/scripts/ci/coverage.sh
                - stage: test
                  env: TEST=scheduler_sp
                  compiler: gcc
                  script:
                          - if [ -z "${DOCKER_NAMESPACE}" ] ; then export DOCKER_NAMESPACE="opendataplane"; fi
                          - docker run --privileged -i -t
                              -v `pwd`:/odp --shm-size 8g
                              -e CC="${CC}"
                              -e CONF=""
                              -e ODP_SCHEDULER=sp
                              ${DOCKER_NAMESPACE}/travis-odp-lng-ubuntu_16.04 /odp/scripts/ci/check.sh
                - stage: test
                  env: TEST=distcheck
                  canfail: yes
                  install:
                          - sudo sysctl vm.nr_hugepages=1000
                  compiler: gcc
                  script:
                          - if [ -z "${DOCKER_NAMESPACE}" ] ; then export DOCKER_NAMESPACE="opendataplane"; fi
                          - docker run --privileged -i -t
                              -v `pwd`:/odp --shm-size 8g
                              -e CC="${CC}"
                              -e CONF="--enable-user-guides"
                              ${DOCKER_NAMESPACE}/travis-odp-lng-ubuntu_16.04 /odp/scripts/ci/distcheck.sh
                - stage: test
                  env: TEST=distcheck_nonabi
                  canfail: yes
                  install:
                          - sudo sysctl vm.nr_hugepages=1000
                  compiler: gcc
                  script:
                          - if [ -z "${DOCKER_NAMESPACE}" ] ; then export DOCKER_NAMESPACE="opendataplane"; fi
                          - docker run --privileged -i -t
                              -v `pwd`:/odp --shm-size 8g
                              -e CC="${CC}"
                              -e CONF="--enable-user-guides --disable-abi-compat"
                              ${DOCKER_NAMESPACE}/travis-odp-lng-ubuntu_16.04 /odp/scripts/ci/distcheck.sh
                - stage: "build only"
                  env: TEST=doxygen
                  compiler: gcc
                  install:
                          - sudo sysctl vm.nr_hugepages=1000
                  script:
                          - if [ -z "${DOCKER_NAMESPACE}" ] ; then export DOCKER_NAMESPACE="opendataplane"; fi
                          - docker run --privileged -i -t -v `pwd`:/odp --shm-size 8g
                              -e CC="${CC}"
                              ${DOCKER_NAMESPACE}/travis-odp-lng-ubuntu_16.04 /odp/scripts/ci/doxygen.sh

                - stage: "build only"
                  env: ARCH=x86_64
                  install:
                          - sudo sysctl vm.nr_hugepages=1000
                  script:
                          - if [ -z "${DOCKER_NAMESPACE}" ] ; then export DOCKER_NAMESPACE="opendataplane"; fi
                          - docker run --privileged -i -t -v `pwd`:/odp --shm-size 8g
                              -e CC="${CC}"
                              ${DOCKER_NAMESPACE}/travis-odp-lng-ubuntu_16.04 /odp/scripts/ci/build_${ARCH}.sh
                - stage: "build only"
                  env: ARCH=x86_64
                  compiler: clang
                  install:
                          - sudo sysctl vm.nr_hugepages=1000
                  script:
                          - if [ -z "${DOCKER_NAMESPACE}" ] ; then export DOCKER_NAMESPACE="opendataplane"; fi
                          - docker run --privileged -i -t -v `pwd`:/odp --shm-size 8g
                              -e CC="${CC}"
                              ${DOCKER_NAMESPACE}/travis-odp-lng-ubuntu_16.04 /odp/scripts/ci/build_${ARCH}.sh
                - stage: "build only"
                  env: ARCH=arm64
                  install:
                          - true
                  script:
                          - if [ -z "${DOCKER_NAMESPACE}" ] ; then export DOCKER_NAMESPACE="opendataplane"; fi
                          - docker run --privileged -i -t -v `pwd`:/odp
                              -e CC="${CC}"
                              ${DOCKER_NAMESPACE}/travis-odp-lng-ubuntu_16.04 /odp/scripts/ci/build_${ARCH}.sh
                - stage: "build only"
                  env: ARCH=i386
                  install:
                          - sudo sysctl vm.nr_hugepages=1000
                  script:
                          - if [ -z "${DOCKER_NAMESPACE}" ] ; then export DOCKER_NAMESPACE="opendataplane"; fi
                          - docker run --privileged -i -t -v `pwd`:/odp --shm-size 8g
                              -e CC="${CC}"
                              ${DOCKER_NAMESPACE}/travis-odp-lng-ubuntu_16.04 /odp/scripts/ci/build_${ARCH}.sh
                - stage: test
                  canfail: yes
                  env: TEST=checkpatch
                  compiler: gcc
                  install:
                          - true
                  script:
                          - echo ${TRAVIS_COMMIT_RANGE};
                          - ODP_PATCHES=`echo ${TRAVIS_COMMIT_RANGE} | sed 's/\.//'`;
                          - ./scripts/ci-checkpatches.sh ${ODP_PATCHES};
        allow_failures:
          - canfail: yes

after_failure:
  - cat config.log
  - find . -name "*.trs" | xargs grep -l '^.test-result. FAIL' | while read trs ; do echo FAILURE detected at $trs; cat ${trs%%.trs}.log ; done
